//Resize each - from any direction (ctrl shift r)
//written by German Bauer

//Specify: 
//a number like 2.0 and it will resize each selected item from center by 2x
//a number plus "w" or "h" it will scale proportionally to that width or height from center
//Add any of "bl", "le", "tl", "to", "tr", "ri", "br", "bo"  to resize from bottomleft, left, topleft. top, topright, right, bottom right or bottom, instead
//Note: Will remember most recently used values between sessions

var def = [NSUserDefaults standardUserDefaults]
var key = "skrz_scaleString"
var sc = [def objectForKey:key]
if(sc == nil) sc = "2.0" //retrieve value from defaults, if none set starting at 2.0

var input = [doc askForUserInput:"Resize value? (append w or h for setting width or height directly" initialValue:sc]
[def setObject:input forKey:key]//set defaults to this value

//var factor = Number(factor) * 1.0

for (var i = 0; i < selection.count(); i++) {
	var layer = selection[i];
	var r = [layer absoluteRect];
	var x = [r rulerX]
	var y = [r rulerY]
	var wi = [r width]
	var he = [r height]

	var factor = parseInt(input) * 1.0
	if(input.indexOf("w") != -1) {
		factor = factor / wi
	}
	if(input.indexOf("h") != -1) {
		factor = factor / he
	}
	
	[layer multiplyBy: factor];

	//resize from where?
	if(input.indexOf("tl") != -1) {
		//from top left
		[r setRulerX: x]; //l
		[r setRulerY: y]; //t
	} else if(input.indexOf("le") != -1) {
		//from left
		[r setRulerX: x]; //l
		[r setRulerY: y + ((he - [r height]) / 2)]; //c
	} else if(input.indexOf("bl") != -1) {
		//from bottom left
		[r setRulerX: x]; //l
		[r setRulerY: y + (he - [r height])]; //b
	} else if(input.indexOf("bo") != -1) {
		//from bottom
		[r setRulerX: x + ((wi - [r width]) / 2)]; //c	
		[r setRulerY: y + (he - [r height])]; //b
	} else if(input.indexOf("br") != -1) {
		//from bottom right
		[r setRulerX: x +  (wi - [r width])]; //r	
		[r setRulerY: y + (he - [r height])]; //b
	} else if(input.indexOf("ri") != -1) {
		//from right
		[r setRulerX: x +  (wi - [r width])]; //r	
		[r setRulerY: y + ((he - [r height]) / 2)]; //c
	} else if(input.indexOf("tr") != -1) {
		//from top right
		[r setRulerX: x +  (wi - [r width])]; //r	
		[r setRulerY: y]; //t
	} else if(input.indexOf("to") != -1) {
		//from top
		[r setRulerX: x + ((wi - [r width]) / 2)]; //c
		[r setRulerY: y]; //t
	} else {
		//from center
		[r setRulerX: x + ((wi - [r width]) / 2)];	//c
		[r setRulerY: y + ((he - [r height]) / 2)]; //c
	}
}